{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/eveno/OneDrive/%EB%B0%94%ED%83%95%20%ED%99%94%EB%A9%B4/%EA%B0%9C%EB%B0%9C%20%ED%8F%B4%EB%8D%94/eventlog/src/app/page.tsx"],"sourcesContent":["// app/page.tsx\r\n\r\nimport React from 'react';\r\n\r\ninterface Log {\r\n  _id: string;\r\n  page: string;\r\n  message: string;\r\n  timestamp: string;\r\n  user: string;\r\n  action: string;\r\n}\r\n\r\nexport default async function Page() {\r\n  // API 엔드포인트 호출 (상대 경로 사용)\r\n  const res = await fetch('/api/mongodb', {\r\n    next: { revalidate: 10 }, // 10초마다 캐시를 갱신 (옵션)\r\n  });\r\n\r\n  if (!res.ok) {\r\n    return <div>데이터를 불러오는 데 실패했습니다.</div>;\r\n  }\r\n\r\n  const logs: Log[] = await res.json();\r\n\r\n  return (\r\n    <main style={{ padding: '2rem' }}>\r\n      <h1>샘플 데이터 목록</h1>\r\n      {logs.length > 0 ? (\r\n        logs.map((log) => (\r\n          <article key={log._id} style={{ marginBottom: '2rem' }}>\r\n            <h2>페이지: {log.page}</h2>\r\n            <p>{log.message}</p>\r\n            <p>사용자: {log.user}</p>\r\n            <p>액션: {log.action}</p>\r\n            <small>\r\n              {new Date(log.timestamp).toLocaleString()}\r\n            </small>\r\n          </article>\r\n        ))\r\n      ) : (\r\n        <p>표시할 데이터가 없습니다.</p>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,eAAe;;;;;;AAaA,eAAe;IAC5B,0BAA0B;IAC1B,MAAM,MAAM,MAAM,MAAM,gBAAgB;QACtC,MAAM;YAAE,YAAY;QAAG;IACzB;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAEA,MAAM,OAAc,MAAM,IAAI,IAAI;IAElC,qBACE,8OAAC;QAAK,OAAO;YAAE,SAAS;QAAO;;0BAC7B,8OAAC;0BAAG;;;;;;YACH,KAAK,MAAM,GAAG,IACb,KAAK,GAAG,CAAC,CAAC,oBACR,8OAAC;oBAAsB,OAAO;wBAAE,cAAc;oBAAO;;sCACnD,8OAAC;;gCAAG;gCAAM,IAAI,IAAI;;;;;;;sCAClB,8OAAC;sCAAG,IAAI,OAAO;;;;;;sCACf,8OAAC;;gCAAE;gCAAM,IAAI,IAAI;;;;;;;sCACjB,8OAAC;;gCAAE;gCAAK,IAAI,MAAM;;;;;;;sCAClB,8OAAC;sCACE,IAAI,KAAK,IAAI,SAAS,EAAE,cAAc;;;;;;;mBAN7B,IAAI,GAAG;;;;0CAWvB,8OAAC;0BAAE;;;;;;;;;;;;AAIX"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/eveno/OneDrive/%EB%B0%94%ED%83%95%20%ED%99%94%EB%A9%B4/%EA%B0%9C%EB%B0%9C%20%ED%8F%B4%EB%8D%94/eventlog/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;iBACVC,MAAMZ,UAAUa,QAAQ;sBACxBC,IAAAA,CAAM,CAAA;gBAAA,QAAA;oBAAA,IAAA;oBAAA;iBAAA;;eACNC,UAAU;;SACV,2CAA2C;cAC3CC,IAAAA;YAAAA,GAAY,GAAA;iBACZC,MAAAA,IAAU,IAAA;wBAAA;4BACVC,KAAAA,CAAAA,GAAAA,2KAAAA,CAAAA,KAAU,EAAE,eAAA,EAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACd,OAAA,GAAA,iTAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACAC,MAAU,CAAA,YAAA,CAAA;;qBACRC,YAAYnB;aACd;QACF,CAAE;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0]}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}